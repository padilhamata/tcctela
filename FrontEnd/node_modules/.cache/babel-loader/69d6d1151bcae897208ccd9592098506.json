{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Estudos/tcctela/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucas/Estudos/tcctela/src/services/util/crud.js\";\nimport React, { useState } from \"react\";\nimport api from \"./api\";\n\nfunction Crud() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        id = _useState2[0],\n        setId = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        nome = _useState4[0],\n        setNome = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        quantidade = _useState6[0],\n        setQuantidade = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        valor = _useState8[0],\n        setValor = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        users = _useState10[0],\n        setUser = _useState10[1];\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let response;\n    console.log(nome, quantidade, valor);\n\n    if (id === 0) {\n      response = await api.post(\"/produtos\", {\n        nome,\n        quantidade,\n        valor\n      });\n    } else {\n      response = await api.put(\"/produtos\", {\n        id,\n        nome,\n        quantidade,\n        valor\n      });\n    }\n\n    console.log(id, nome, quantidade, valor);\n    console.log(response);\n  }\n\n  async function handleAtualiza() {\n    const response = await api.get(\"/produtos\");\n    setUser(response.data);\n    console.log(response);\n  }\n\n  function handleEditar(id, nome, quantidade, valor) {\n    setId(id);\n    setNome(nome);\n    setQuantidade(quantidade);\n    setValor(valor);\n  }\n\n  async function handleExcluir(id) {\n    const responsedelete = await api.delete(\"/produtos/\" + id);\n    const get = await api.get(\"/produtos\");\n    setUser(get.data);\n    console.log(responsedelete);\n    console.log(get);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Crud B\\xE1sico \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Nome: \"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, id), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"nome\",\n    id: \"nome\",\n    onChange: event => setNome(event.target.value),\n    value: nome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), \"Quantidade\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"quantidade\",\n    id: \"quantidade\",\n    onChange: event => setQuantidade(event.target.value),\n    value: quantidade,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), \"Valor\", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"valor\",\n    id: \"valor\",\n    onChange: event => setValor(event.target.value),\n    value: valor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Enviar\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Atualizar/Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAtualiza,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Atualizar\"), users.map(user => React.createElement(\"div\", {\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, user.id, \" Nome= \", user.nome, \", Quantidade= \", user.quantidade, \", Valor=\", user.valor), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleEditar.bind(\"\", user.id, user.nome, user.quantidade, user.valor),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleExcluir.bind(\"\", user.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Excluir\")))));\n}\n\nexport default Crud;","map":{"version":3,"sources":["/home/lucas/Estudos/tcctela/src/services/util/crud.js"],"names":["React","useState","api","Crud","id","setId","nome","setNome","quantidade","setQuantidade","valor","setValor","users","setUser","handleSubmit","event","preventDefault","response","console","log","post","put","handleAtualiza","get","data","handleEditar","handleExcluir","responsedelete","delete","target","value","map","user","bind"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport api from \"./api\";\n\nfunction Crud() {\n  const [id, setId] = useState(\"\");\n  const [nome, setNome] = useState(\"\");\n  const [quantidade, setQuantidade] = useState(\"\");\n  const [valor, setValor] = useState(\"\");\n  const [users, setUser] = useState([]);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let response;\n    console.log(nome, quantidade, valor);\n    if (id === 0) {\n      response = await api.post(\"/produtos\", { nome, quantidade, valor });\n    } else {\n      response = await api.put(\"/produtos\", {\n        id,\n        nome,\n        quantidade,\n        valor\n      });\n    }\n    console.log(id, nome, quantidade, valor);\n    console.log(response);\n  }\n\n  async function handleAtualiza() {\n    const response = await api.get(\"/produtos\");\n    setUser(response.data);\n    console.log(response);\n  }\n\n  function handleEditar(id, nome, quantidade, valor) {\n    setId(id);\n    setNome(nome);\n    setQuantidade(quantidade);\n    setValor(valor);\n  }\n\n  async function handleExcluir(id) {\n    const responsedelete = await api.delete(\"/produtos/\" + id);\n    const get = await api.get(\"/produtos\");\n    setUser(get.data);\n    console.log(responsedelete);\n    console.log(get);\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <h1> Crud Básico </h1>\n        <h2>Create</h2>\n        <label>Nome: </label>\n        <label>{id}</label>\n        <input\n          type=\"text\"\n          name=\"nome\"\n          id=\"nome\"\n          onChange={event => setNome(event.target.value)}\n          value={nome}\n        />\n        <br />\n        Quantidade\n        <input\n          type=\"text\"\n          name=\"quantidade\"\n          id=\"quantidade\"\n          onChange={event => setQuantidade(event.target.value)}\n          value={quantidade}\n        />\n        <br />\n        Valor\n        <input\n          type=\"text\"\n          name=\"valor\"\n          id=\"valor\"\n          onChange={event => setValor(event.target.value)}\n          value={valor}\n        />\n        <button type=\"submit\">Enviar</button>\n      </form>\n      <div>\n        <h2>Atualizar/Editar</h2>\n        <button type=\"button\" onClick={handleAtualiza}>\n          Atualizar\n        </button>\n        {users.map(user => (\n          <div key={user.id}>\n            <p>\n              {user.id} Nome= {user.nome}, Quantidade= {user.quantidade}, Valor=\n              {user.valor}\n            </p>\n            <button\n              type=\"button\"\n              onClick={handleEditar.bind(\n                \"\",\n                user.id,\n                user.nome,\n                user.quantidade,\n                user.valor\n              )}\n            >\n              Editar\n            </button>\n            <button type=\"button\" onClick={handleExcluir.bind(\"\", user.id)}>\n              Excluir\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Crud;\n"]},"metadata":{},"sourceType":"module"}